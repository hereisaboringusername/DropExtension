package com.badlogic.drop;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.math.MathUtils;
import java.util.Random;

public class DropSprite extends Sprite
{
    Texture dropImage;
    int rotateAngle;
    int rotateDirection; // -1 if clockwise; 1 if counterclockwise

    public DropSprite() {
        // load the images for the droplet and the bucket, 64x64 pixels each
        dropImage = new Texture(Gdx.files.internal("droplet.png"));
        //Q.5
        //(13%) When creating a raindrop sprite, give it a random color tint.
        // Project 1: Ashley Zingillioglu s1310999
        Random randomGenerator = new Random();
        int red = randomGenerator.nextInt(256);
        int green = randomGenerator.nextInt(256);
        int blue = randomGenerator.nextInt(256);

        Color randomColour = new Color(red,green,blue);


    }


        // ==> A Sprite is not drawable until its texture (region) and bounds are set
        //     (per https://v.gd/wwEZqD).
        //     The Sprite(Texture texture) constructor would take care of these details for us, but
        //     we're not using that constructor.

        // setTexture(dropImage); // incorrect method; use setRegion()
        setRegion(dropImage);  // inherited from TextureRegion
        setBounds(0, 0, 64, 64);

        rotateAngle = 5; // degrees, per frame

        // Assign random rotate direction:
        if (MathUtils.random(0, 1) == 0) // coin flip
            rotateDirection = 1;
        else
            rotateDirection = -1;
// Q4 Project 1: Ashley Zingillioglu s1310999
        // setScale(0.5f); // try
        int min = 5;
        int max = 10;

        //Generate random int value from 50 to 100
        System.out.println("Random value in int from "+min+" to "+max+ ":");
        int random_int = (int)Math.floor(Math.random()*(max-min+1)+min);
        setScale(random_int/10.0f);
        System.out.println(random_int);
    } // end constructor





    public void rotate()
    {
        setOriginCenter(); // Need this Sprite class method for correct centered rotation.
        super.rotate(rotateDirection * rotateAngle);
    }

}


